/* Signal PROcessing LAnguage */
/*   Flex definition          */

/* we'll create our own main function so we */
/*   don't need the default routine         */
%option nodefault

/* we only need a single input file         */
%option noyywrap

/* automatic line numbers for debugging     */
%option yylineno

%{
#include "sprola.tab.h" /* Generated by Bison */
#include "sprola.h"     /* Manually maintained */

extern void yyerror(char const*);
extern char *current_filename;   // read source from here

%}

%%

[ \t]   ;

\n        { /* ++yylineno; */ }
"func"    { yylval.sval = strdup(yytext); return FUNC; }
"("       { return OP; }
")"       { return CP; }
"{"       { return OCB; }
"}"       { return CCB; }
"["       { return OBK; }
"]"       { return CBK; }
"."       { return DOT; }
":"       { return COLON; }
","       { return COMMA; }
"float"   { yylval.sval = strdup(yytext); return TYPE; }

"sample"  { yylval.sval = strdup(yytext); return TYPE; }

"%option" { return OPTION; }

[0-9]+    { yylval.ival = atoi(yytext); return INTEGER; }
[_a-zA-Z][a-zA-Z0-9_]* { addref(yylineno, current_filename, yytext, 0);
                          return IDENTIFIER; }

"//".*    { /* ignore comments for now */ }

.         { return yytext[0]; }

%%
